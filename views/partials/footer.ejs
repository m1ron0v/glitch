    </div> <footer class="footer">
        <div class="container"> <span>&copy; <%= new Date().getFullYear() %> Мій Додаток. Glitch.</span>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Глобальний JavaScript, наприклад, ваша функція getBotProcessStatus
        async function getBotProcessStatus(dbId, botInternalId) {
            const statusElement = document.getElementById(`status-text-${botInternalId}`); // <p> тег
            const statusBadge = document.getElementById(`status-badge-${botInternalId}`); // <span> тег для значка

            if (statusBadge) { // Спочатку оновлюємо значок
                 statusBadge.className = 'badge bg-info text-dark'; // Клас завантаження
                 statusBadge.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Завантаження...';
            } else if (statusElement) { // Якщо значка немає, оновлюємо весь <p>
                statusElement.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Оновлення статусу...';
            }

            try {
                const response = await fetch(`/bots/process-status/${dbId}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}, message: ${await response.text()}`);
                }
                const data = await response.json();
                
                let badgeText = data.status ? data.status.toUpperCase() : 'НЕВІДОМО';
                let badgeClass = 'bg-secondary'; // За замовчуванням

                if (data.status === 'running') {
                    badgeClass = 'bg-success';
                    badgeText = 'АКТИВНИЙ';
                } else if (data.status === 'stopped') {
                    badgeClass = 'bg-secondary'; // Узгоджено з відображенням з БД
                    badgeText = 'ЗУПИНЕНО';
                } else if (data.status === 'error') {
                    badgeClass = 'bg-danger';
                    badgeText = 'ПОМИЛКА';
                } else if (data.status === 'stale' ) { // Новий статус з API
                    badgeClass = 'bg-warning text-dark';
                    badgeText = 'ЗАСТАРІЛИЙ';
                } else if (data.status === 'starting') {
                    badgeClass = 'bg-info text-dark';
                    badgeText = 'ЗАПУСК...';
                }
                
                if (statusBadge) {
                    statusBadge.textContent = badgeText;
                    statusBadge.className = `badge ${badgeClass}`;
                }
                // Оновлюємо текстовий опис в <p> тегу, якщо він є
                if (statusElement) {
                     statusElement.innerHTML = `<strong>Статус процесу:</strong> <span class="badge ${badgeClass}" id="status-badge-${botInternalId}">${badgeText}</span>`;
                     if(data.message && data.status !== 'running' && data.status !== 'stopped' && data.status !== 'starting') { // Додаємо повідомлення, якщо це не стандартний статус
                         statusElement.innerHTML += `<br><small class="text-muted">${data.message}</small>`;
                     }
                }

            } catch (error) {
                console.error('Error fetching bot process status:', error);
                if (statusBadge) {
                    statusBadge.textContent = 'ПОМИЛКА';
                    statusBadge.className = 'badge bg-dark';
                }
                if (statusElement) { // Також оновлюємо <p>
                     statusElement.innerHTML = `<strong>Статус процесу:</strong> <span class="badge bg-dark" id="status-badge-${botInternalId}">ПОМИЛКА</span><br><small class="text-muted">Не вдалося отримати статус.</small>`;
                }
            }
        }
    </script>
</body>
</html>
